# Generated by Django 5.2.7 on 2025-10-23 22:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlimentoTaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_taco', models.CharField(max_length=10, unique=True, verbose_name='Código TACO')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Alimento')),
                ('categoria', models.CharField(max_length=100, verbose_name='Categoria')),
                ('valor_energetico', models.DecimalField(decimal_places=2, help_text='Valor energético por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor Energético (kcal)')),
                ('proteinas', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Proteínas (g)')),
                ('carboidratos', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Carboidratos (g)')),
                ('acucares_totais', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Açúcares Totais (g)')),
                ('acucares_adicionados', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Açúcares Adicionados (g)')),
                ('gorduras_totais', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gorduras Totais (g)')),
                ('gorduras_saturadas', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gorduras Saturadas (g)')),
                ('gorduras_trans', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gorduras Trans (g)')),
                ('fibra_alimentar', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fibra Alimentar (g)')),
                ('sodio', models.DecimalField(decimal_places=2, help_text='Valor por 100g', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sódio (mg)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Alimento TACO',
                'verbose_name_plural': 'Alimentos TACO',
                'db_table': 'alimentos_taco',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('tipo', models.CharField(choices=[('estudante', 'Estudante'), ('profissional', 'Profissional'), ('professor', 'Professor')], max_length=20, verbose_name='Tipo de Usuário')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado a')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence.', related_name='usuario_groups', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='usuario_permissions', to='auth.permission', verbose_name='permissões de usuário')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('celular', models.CharField(max_length=20, verbose_name='Celular')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Receita')),
                ('categoria', models.CharField(max_length=100, verbose_name='Categoria')),
                ('tempo_preparo_horas', models.IntegerField(default=0, verbose_name='Tempo de Preparo (Horas)')),
                ('tempo_preparo_minutos', models.IntegerField(default=0, verbose_name='Tempo de Preparo (Minutos)')),
                ('porcao_individual', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Porção Individual')),
                ('medida', models.CharField(choices=[('g', 'Gramas (g)'), ('ml', 'Mililitros (ml)')], max_length=2, verbose_name='Medida da Porção')),
                ('modo_preparo', models.TextField(verbose_name='Modo de Preparo')),
                ('habilitar_precificacao', models.BooleanField(default=False, verbose_name='Habilitar Precificação')),
                ('markup', models.DecimalField(blank=True, decimal_places=2, help_text='Percentual de markup sobre o custo total', max_digits=5, null=True, verbose_name='Markup (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receitas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Receita',
                'verbose_name_plural': 'Receitas',
                'db_table': 'receitas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ingrediente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_bruto', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Peso Bruto (g/ml)')),
                ('peso_liquido', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Peso Líquido (g/ml)')),
                ('peso_processado', models.DecimalField(blank=True, decimal_places=2, help_text='Peso após cozimento/fritura/processamento. Se não preenchido, será igual ao peso líquido', max_digits=8, null=True, verbose_name='Peso Processado (g/ml)')),
                ('custo_embalagem', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo por Embalagem (R$)')),
                ('quantidade_embalagem', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Quantidade por Embalagem (g/ml)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('alimento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.alimentotaco', verbose_name='Alimento')),
                ('receita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredientes', to='api.receita', verbose_name='Receita')),
            ],
            options={
                'verbose_name': 'Ingrediente',
                'verbose_name_plural': 'Ingredientes',
                'db_table': 'ingredientes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('declaracao_alergenicos', models.TextField(blank=True, help_text='Campo livre para declaração de alergênicos', verbose_name='Declaração de Alergênicos')),
                ('arquivo_pdf', models.FileField(help_text='PDF contendo ficha técnica, rótulos e precificação', upload_to='documentos/%Y/%m/', verbose_name='Arquivo PDF')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos', to='api.cliente', verbose_name='Cliente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('receita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='api.receita', verbose_name='Receita')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'db_table': 'documentos',
                'ordering': ['-created_at'],
            },
        ),
    ]
